#include<stdio.h>
#include<limits.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>

int power(n){
int x=1;
if(n==0) return 1;
else {
   for(int i=1;i<=n;i++){
       x=2*x;}
       return x;}}
       
 int powroct(p){
int x=1;
if(p==0) return 1;
else {
   for(int i=1;i<=p;i++){
       x=8*x;}
       return x;}}    
       
       
       int powrhex(p){
int x=1;
if(p==0) return 1;
else {
   for(int i=1;i<=p;i++){
       x=16*x;}
       return x;}}    
       
       
void decimaltobinary(){
  int n,r,x=0,i,sum=0,y=0,z,a[100000],p,j=0;
printf ("enter decimal no:");
scanf("%d",&n);
while(n>0){

  r=n%2;
  a[y]=r;
  n=n/2;
 z=x++;
  y++;
  }
  printf ("your binary no is:");
for(i=z;i>=0;i--){
  printf("%d",a[i]);}   
 
 
 //binary to decimal 
 
 printf ("\nenter binary no:");
scanf("%d",&p); 
 while(p>0){
    r=p%10;
    sum = sum+(r*power(j));
    p=p/10;
    j++;
    
  }
printf("your decimal no is:%d",sum);
  
  
 } 
 
 void decimaltooctal(){
 int n,r,x=0,i,sum=0,y=0,z,a[100000],p,j=0;
     printf ("enter decimal no:");
scanf("%d",&n);
while(n>0){
if(n<0){r=n;}
else {
  r=n%8;}
  a[y]=r;
  n=n/8;
 z=x++;
  y++;
  }
  printf ("your octal no is:");
for(i=z;i>=0;i--){
  printf("%d",a[i]);}   
  



 printf ("\nenter octal no:");
scanf("%d",&p); 
 while(p>0){
    r=p%10;
    sum = sum+(r*powroct(j));
    p=p/10;
    j++;
    
  }
printf("your decimal no is:%d",sum);
     }
     
     
 void decimaltohexadecimal(){
 int n,r,x=0,i,sum=0,y=0,z,a[100000],p,j=0;
     printf ("enter decimal no:");
scanf("%d",&n);
while(n>0){
if(n<0){r=n;}
else {
  r=n%16;}
  a[y]=r;
  n=n/16;
 z=x++;
  y++;
  }
  printf ("your hexadecimal no is:");
for(i=z;i>=0;i--){
  printf("%d",a[i]);}   
  



  printf ("\nenter hexadecimal no:");
scanf("%d",&p); 
 while(p>0){
    r=p%10;
    sum = sum+(r*powrhex(j));
    p=p/10;
    j++;
    
  }
printf("your decimal no is:%d",sum);

     }    
 
  
  
          
  int main(){
 //BINARY SEARCH 
 /*int a[8]={5,2,7,6,3,9,8},i,j,k,t,x,ld=0,ud=7,flag=0,loc,mid;
 printf ("write  the value  of  element which \n you want to search ");
     scanf ("%d",&x);
 for(i=0;i<=6;i++){
    for(j=0;j<=6-i;j++){
        if(a[j]>a[j+1]){
           t=a[j+1];
           a[j+1]=a[j];
           a[j]=t;}}}
     
   while(ld<=ud){
     mid=(ld+ud)/2;
     if(x==a[mid]){
       flag=1;
       loc=mid+1;
       break;}
     else if(x<a[mid]){
        ud=mid-1;}
        else  ld=mid+1; }
   if(flag==1) printf ("the element  present  in the loc %d",loc);
   else   printf ("the element is not present");*/
 
 
 
 //selection  short     
/* int a[8]={5,2,7,6,3,34,9,8},i,j,k,t;
 
 for(i=0;i<=7;i++){
 int min=INT_MAX,ind=0;
    for(j=i;j<=7;j++){
    if(min>a[j]){
       min=a[j];
       ind=j;
}
       }
              t=a[i];
        a[i]=a[ind]; 
       a[ind]=t;
       }
       
       for(i=0;i<=7;i++){
       printf ("%d ",a[i]); }*/
       
       
 //insertion  short     
/*int a[8]={5,2,7,6,3,4,9,8},i,j,k,t;     
for(i=0;i<=7;i++){
   j=i;
   while(j>=1 && a[j]<a[j-1]){
        t=a[j-1];
       a[j-1]=a[j];
       a[j]=t;
       j--;}}
  for(i=0;i<=7;i++){
        printf ("%d ",a[i]); }*/
 
 
 
 //gcd and lcm       
 /* int m,n;
  scanf ("%d%d",&n,&m);
  int y=m,z=n;
  int gcd,lcm;
  while(n!=0 && m!=0){
    gcd=n;
    n=m%n;
    m=gcd;
    }
    printf(" %d ",gcd);
    lcm=(y*z)/gcd;
    printf("%d ",lcm);*/
    
 // printf ("%d", printf ("hello"));
    
    
//find the number  of triplet in the array whose sum is 12    
/*int a[8]={1,4,3,6,5,6,7,8},i,j,k,count=0,s,t=0;  
for(i=0;i<=7;i++){ 
 for(j=i+1;j<7;j++){
  for(k=j+1;k<7;k++){
   s=a[t]+a[j]+a[k];
   if(s==12){
   count++;}
   }}
   t++;}
   printf ("%d\n",count);*/
   
//#NUMBER  SYSTEM $$$$$$$$# 
int n;
 printf ("what type of conversation  you want to do\n");
 printf ("if between decimal and binary write 1:\n");
printf ("if between decimal and octal write 2:\n");
printf ("if between decimal and hexadecimal write 3:\n");
 scanf("%d",&n);
switch (n){
  case 1: decimaltobinary(); break;
  case 2: decimaltooctal(); break;
  case 3: decimaltohexadecimal(); break;
  default : printf ("Abe dakh vlo kora 3 ar basi hoba na"); break;
  }




  
return 0;
}
